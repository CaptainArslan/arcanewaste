{
    "openapi": "3.0.0",
    "info": {
        "title": "Rogue Insider API Documentation",
        "description": "Media endpoints for media upload and management.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://arcane-2nd-version.test/api/v1",
            "description": "API Base URL"
        }
    ],
    "paths": {
        "/company/auth/send-otp": {
            "post": {
                "tags": [
                    "Company Authentication"
                ],
                "summary": "Send OTP to company email",
                "description": "Generates a one-time password (OTP) and sends it to the company's registered email address.",
                "operationId": "4c0c8e888a896e72324a5745d604d44b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "company@gmail.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The email field is required."
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/company/auth/register": {
            "post": {
                "tags": [
                    "Company Authentication"
                ],
                "summary": "Register a new company and return access token",
                "description": "Registers a company, creates a warehouse, registers device, and issues a JWT access token.",
                "operationId": "3ea198bf3b9ad5d1098b784b294f325b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "otp",
                                    "name",
                                    "address",
                                    "documents"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "company@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Acme Inc."
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "website": {
                                        "type": "string",
                                        "example": "https://acme.com"
                                    },
                                    "logo": {
                                        "type": "string",
                                        "example": "https://acme.com/logo.png"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Company description goes here."
                                    },
                                    "address": {
                                        "required": [
                                            "address_line1",
                                            "city",
                                            "country"
                                        ],
                                        "properties": {
                                            "address_line1": {
                                                "type": "string",
                                                "example": "123 Business St"
                                            },
                                            "address_line2": {
                                                "type": "string",
                                                "example": "Suite 100"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "New York"
                                            },
                                            "state": {
                                                "type": "string",
                                                "example": "NY"
                                            },
                                            "country": {
                                                "type": "string",
                                                "example": "USA"
                                            },
                                            "zip": {
                                                "type": "string",
                                                "example": "10001"
                                            },
                                            "is_primary": {
                                                "type": "boolean",
                                                "example": true
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "documents": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "name",
                                                "type",
                                                "file_path",
                                                "mime_type",
                                                "issued_at",
                                                "expires_at",
                                                "is_verified"
                                            ],
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Business License"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "license"
                                                },
                                                "file_path": {
                                                    "type": "string",
                                                    "example": "documents/license.pdf"
                                                },
                                                "mime_type": {
                                                    "type": "string",
                                                    "example": "application/pdf"
                                                },
                                                "issued_at": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-01-01"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2030-01-01"
                                                },
                                                "is_verified": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "device_token": {
                                        "type": "string",
                                        "example": "device-uuid-123",
                                        "nullable": true
                                    },
                                    "device_type": {
                                        "type": "string",
                                        "enum": [
                                            "android",
                                            "ios"
                                        ],
                                        "example": "android"
                                    },
                                    "device_id": {
                                        "type": "string",
                                        "example": "device-uuid-123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Company registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Company registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGci..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                },
                                                "company": {
                                                    "$ref": "#/components/schemas/CompanyResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The email field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/company/auth/login": {
            "post": {
                "tags": [
                    "Company Authentication"
                ],
                "summary": "Login a company and return access token",
                "description": "Authenticates a company and returns a JWT access token along with company details.",
                "operationId": "0a0c61ff8b1b065d428d62a75a1f8ffd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "company@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Company logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Company logged in successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGci..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                },
                                                "company": {
                                                    "$ref": "#/components/schemas/CompanyResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The email field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/company/details": {
            "get": {
                "tags": [
                    "Company Details"
                ],
                "summary": "Get company details",
                "description": "Fetches authenticated company's details including general settings, addresses, documents, warehouses, payment options, timings, holidays, etc.",
                "operationId": "10e29bff4ad3be72dcbd544e2422803c",
                "responses": {
                    "200": {
                        "description": "Company details fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Company details fetched successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CompanyResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/company/auth/forgot-password": {
            "post": {
                "tags": [
                    "Company Authentication"
                ],
                "summary": "Send OTP for password reset",
                "description": "Sends an OTP to the company's registered email address for password reset.",
                "operationId": "e0f31f973fdf3a5c70447112c0bf1d65",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "company@gmail.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The email field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/company/auth/reset-password": {
            "post": {
                "tags": [
                    "Company Authentication"
                ],
                "summary": "Reset password using OTP",
                "description": "Resets the company's password using the provided email, OTP, and new password.",
                "operationId": "6651e799578aff286debb9402abbf8d0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "company@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newSecret123"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired OTP"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The email field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/company/auth/update-password": {
            "post": {
                "tags": [
                    "Company Authentication"
                ],
                "summary": "Update password for logged-in company",
                "description": "Allows an authenticated company to update its password by providing the old password and a new password.",
                "operationId": "9481bc5dabd89f25ad859bc1d00b3392",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "old_password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "old_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newSecret123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newSecret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Old password does not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The old password is incorrect"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The password confirmation does not match."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/company/auth/logout": {
            "post": {
                "tags": [
                    "Company Authentication"
                ],
                "summary": "Logout a company",
                "description": "Logs out a company and invalidates the access token.",
                "operationId": "ef15ba390ef00e8b0869167c0d5912ed",
                "responses": {
                    "200": {
                        "description": "Company logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Company logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/company/general-settings": {
            "get": {
                "tags": [
                    "General Settings"
                ],
                "summary": "Get general settings",
                "description": "Fetch general settings for the authenticated company. Supports filtering, sorting, and optional pagination.",
                "operationId": "6a153c5fed6fe5e3df4de2274b6ce0be",
                "parameters": [
                    {
                        "name": "filters[key]",
                        "in": "query",
                        "description": "Filter settings by key",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[value]",
                        "in": "query",
                        "description": "Filter settings by value",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[type]",
                        "in": "query",
                        "description": "Filter settings by type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort order: 'asc' or 'desc'",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "Whether to paginate the results (true/false)",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page if pagination is enabled",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number if pagination is enabled",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "General settings fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "General settings fetched successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GeneralSettingResource"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "links": {
                                                    "properties": {
                                                        "first": {
                                                            "type": "string",
                                                            "example": "http://example.com/api/general-settings?page=1"
                                                        },
                                                        "last": {
                                                            "type": "string",
                                                            "example": "http://example.com/api/general-settings?page=5"
                                                        },
                                                        "prev": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        },
                                                        "next": {
                                                            "type": "string",
                                                            "example": "http://example.com/api/general-settings?page=2",
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/company/general-settings/{id}": {
            "get": {
                "tags": [
                    "General Settings"
                ],
                "summary": "Get a single general setting",
                "description": "Fetches a single general setting by its ID for a given model (polymorphic).",
                "operationId": "8aecb4424b8de6c04dbad289453229a6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the general setting",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "General setting fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "General setting fetched successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/GeneralSettingResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "General setting not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "General setting not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/company/general-settings/{id}/{key}": {
            "put": {
                "tags": [
                    "General Settings"
                ],
                "summary": "Update a general setting",
                "description": "Updates a specific general setting by its ID and key for the authenticated company.",
                "operationId": "6fa171c0bcbb5e97012230d1fabffe60",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the general setting",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Key of the general setting to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "order_cancelation_time_limit"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "example": "30"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "General setting updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "General setting updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/GeneralSettingResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "General setting not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "General setting not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/company/payment-options": {
            "get": {
                "tags": [
                    "Payment Options"
                ],
                "summary": "List payment options",
                "description": "Fetches a list of payment options for the authenticated company with filtering, sorting, and pagination support.",
                "operationId": "4b7fc2d233242c2822d74f8e3763fc63",
                "parameters": [
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "description": "Filter by payment option ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": null
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "description": "Filter by payment option name (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": null
                        }
                    },
                    {
                        "name": "filters[type]",
                        "in": "query",
                        "description": "Filter by payment option type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": null
                        }
                    },
                    {
                        "name": "filters[percentage]",
                        "in": "query",
                        "description": "Filter by percentage value",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": null
                        }
                    },
                    {
                        "name": "filters[description]",
                        "in": "query",
                        "description": "Filter by description (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": null
                        }
                    },
                    {
                        "name": "filters[is_active]",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                0,
                                1
                            ],
                            "example": null
                        }
                    },
                    {
                        "name": "filters[company_id]",
                        "in": "query",
                        "description": "Filter by company ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": null
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort order (asc or desc). Default: desc",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "example": "desc"
                        }
                    },
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "Whether to paginate results (1/0). Default: 1",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                0,
                                1
                            ],
                            "example": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page (if paginate=1).",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment options fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment options fetched successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PaymentOptionResource"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 72
                                                },
                                                "links": {
                                                    "properties": {
                                                        "first": {
                                                            "type": "string",
                                                            "example": "http://api.example.com/company/payment-options?page=1"
                                                        },
                                                        "last": {
                                                            "type": "string",
                                                            "example": "http://api.example.com/company/payment-options?page=5"
                                                        },
                                                        "prev": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "next": {
                                                            "type": "string",
                                                            "example": "http://api.example.com/company/payment-options?page=2"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/company/payment-options/{id}": {
            "get": {
                "tags": [
                    "Payment Options"
                ],
                "summary": "Get payment option details",
                "description": "Fetch a specific payment option by its ID for the authenticated company.",
                "operationId": "0c00722c6986b19a8cd261c9c51107de",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment option ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment option fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment option fetched successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaymentOptionResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment option not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment option not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/company/payment-options/{id}/{type}": {
            "put": {
                "tags": [
                    "Payment Options"
                ],
                "summary": "Update a payment option",
                "description": "Update specific fields of a payment option for the authenticated company. \n     *         Only partial updates are allowed (you do not need to send all fields).",
                "operationId": "95c785c7c6d413ffb75ae9a3623c0b8d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment option ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of update (e.g. 'partial')",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "partial"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Upfront Payment"
                                    },
                                    "percentage": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Upfront 50% payment option"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment option updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment option updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaymentOptionResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment option not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment option not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/company/taxes": {
            "get": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Get all taxes for a company",
                "description": "Retrieve all taxes for the authenticated company with optional filters, sorting, and pagination",
                "operationId": "ab3fc66329e2d0904f2661c42708df88",
                "parameters": [
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "description": "Filter by tax ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "description": "Filter by tax name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[type]",
                        "in": "query",
                        "description": "Filter by tax type (percentage or fixed)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[rate]",
                        "in": "query",
                        "description": "Filter by tax rate",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "filters[is_active]",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort order (asc or desc), default desc",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "Whether to paginate results (true/false)",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Taxes retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Taxes fetched successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TaxResource"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "links": {
                                                    "properties": {
                                                        "first": {
                                                            "type": "string",
                                                            "example": "http://api.example.com/company/taxes?page=1"
                                                        },
                                                        "last": {
                                                            "type": "string",
                                                            "example": "http://api.example.com/company/taxes?page=1"
                                                        },
                                                        "prev": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "next": {
                                                            "type": "string",
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Create a new tax",
                "description": "Create a tax for the authenticated company",
                "operationId": "df680fb123145b324b083be791cf949a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "VAT"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "percentage",
                                            "fixed"
                                        ],
                                        "example": "percentage"
                                    },
                                    "rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tax created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tax created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TaxResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or tax already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tax already exists"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/company/taxes/{id}": {
            "get": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Get a single tax",
                "description": "Retrieve a tax by ID for the authenticated company",
                "operationId": "cc21d21a1d6032c690b7b70cabf0ba58",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tax",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tax fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tax fetched successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TaxResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tax not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tax not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/company/taxes/{tax}": {
            "put": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Update an existing tax",
                "description": "Update a tax for the authenticated company",
                "operationId": "d29398bf8043bc25111283c1a711af72",
                "parameters": [
                    {
                        "name": "tax",
                        "in": "path",
                        "description": "ID of the tax to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "VAT"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "percentage",
                                            "fixed"
                                        ],
                                        "example": "percentage"
                                    },
                                    "rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tax updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tax updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TaxResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Delete a tax",
                "description": "Delete a tax for the authenticated company",
                "operationId": "5f32a5c74e498c1254959165538b5974",
                "parameters": [
                    {
                        "name": "tax",
                        "in": "path",
                        "description": "ID of the tax to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tax deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tax deleted successfully"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tax not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tax not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/company/timings": {
            "get": {
                "tags": [
                    "Timings"
                ],
                "summary": "Get company timings",
                "description": "Fetch all timings for the authenticated company with optional filters, sorting, and pagination",
                "operationId": "3dfc7771f94a8b157451497c83df134e",
                "parameters": [
                    {
                        "name": "filters[day_of_week]",
                        "in": "query",
                        "description": "Filter by day of week (monday, tuesday, ...)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": null
                        }
                    },
                    {
                        "name": "filters[is_closed]",
                        "in": "query",
                        "description": "Filter by closed/open status",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": null
                        }
                    },
                    {
                        "name": "filters[opens_at]",
                        "in": "query",
                        "description": "Filter by opening time",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "time",
                            "default": null
                        }
                    },
                    {
                        "name": "filters[closes_at]",
                        "in": "query",
                        "description": "Filter by closing time",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "time",
                            "default": null
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting order: asc or desc",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "Whether to paginate results",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Timings fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Timings fetched successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TimingResource"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "links": {
                                                    "properties": {
                                                        "first": {
                                                            "type": "string",
                                                            "example": "url_to_first_page"
                                                        },
                                                        "last": {
                                                            "type": "string",
                                                            "example": "url_to_last_page"
                                                        },
                                                        "prev": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "next": {
                                                            "type": "string",
                                                            "example": null
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/company/timings/{id}": {
            "get": {
                "tags": [
                    "Timings"
                ],
                "summary": "Get a single timing",
                "description": "Fetch a specific timing for the authenticated company by ID",
                "operationId": "648e5aa7fd263209a5833e66136d5414",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the timing",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Timing fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Timing fetched successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TimingResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Timing not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Timing not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/company/timings/sync": {
            "put": {
                "tags": [
                    "Timings"
                ],
                "summary": "Sync company timings",
                "description": "Delete old timings and create new weekly timings for the authenticated company. Only timings sent in the payload will exist after this operation.",
                "operationId": "69a8034b9bcc9dd5579b0ea3cff9236b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "timings": {
                                        "description": "Array of timings to sync for the week",
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "day_of_week",
                                                "opens_at",
                                                "closes_at",
                                                "is_closed"
                                            ],
                                            "properties": {
                                                "day_of_week": {
                                                    "description": "Day of the week (lowercase)",
                                                    "type": "string",
                                                    "example": "monday"
                                                },
                                                "opens_at": {
                                                    "description": "Opening time",
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "09:00:00"
                                                },
                                                "closes_at": {
                                                    "description": "Closing time",
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "18:00:00"
                                                },
                                                "is_closed": {
                                                    "description": "Whether the day is closed",
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Timings synced successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Timing updated successfully"
                                        },
                                        "data": {
                                            "description": "Array of updated timings",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TimingResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/company/warehouses": {
            "get": {
                "tags": [
                    "Warehouses"
                ],
                "summary": "List warehouses",
                "description": "Fetches a list of warehouses for the authenticated company with filtering, sorting, and pagination support. All filters default to null.",
                "operationId": "953ff457fdb81fa0a66c122e2ed6f230",
                "parameters": [
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "description": "Filter by warehouse name (partial match). Default: null",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": null
                        }
                    },
                    {
                        "name": "filters[code]",
                        "in": "query",
                        "description": "Filter by warehouse code (partial match). Default: null",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": null
                        }
                    },
                    {
                        "name": "filters[type]",
                        "in": "query",
                        "description": "Filter by warehouse type (partial match). Default: null",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": null
                        }
                    },
                    {
                        "name": "filters[capacity]",
                        "in": "query",
                        "description": "Filter by warehouse capacity (partial match). Default: null",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": null
                        }
                    },
                    {
                        "name": "filters[is_active]",
                        "in": "query",
                        "description": "Filter by active status (0 = inactive, 1 = active). Default: null",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                0,
                                1
                            ],
                            "example": null
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort order (asc or desc). Default: desc",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "example": "desc"
                        }
                    },
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "Whether to paginate results (true/false). Default: true",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results per page (if paginate=true). Default: 15",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Warehouses fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Warehouses fetched successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WarehouseResource"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 72
                                                },
                                                "links": {
                                                    "properties": {
                                                        "first": {
                                                            "type": "string",
                                                            "example": "http://api.example.com/company/warehouses?page=1"
                                                        },
                                                        "last": {
                                                            "type": "string",
                                                            "example": "http://api.example.com/company/warehouses?page=5"
                                                        },
                                                        "prev": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "next": {
                                                            "type": "string",
                                                            "example": "http://api.example.com/company/warehouses?page=2"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Warehouses"
                ],
                "summary": "Create a warehouse",
                "description": "Creates a new warehouse for the authenticated company",
                "operationId": "ba4e71d75f1ffe8d0c6566d664174254",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Main Warehouse"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "WH001"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Dumpster"
                                    },
                                    "capacity": {
                                        "type": "integer",
                                        "example": 50
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "address": {
                                        "properties": {
                                            "address_line1": {
                                                "type": "string",
                                                "example": "123 Street"
                                            },
                                            "address_line2": {
                                                "type": "string",
                                                "example": "Apt 4B"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "New York"
                                            },
                                            "state": {
                                                "type": "string",
                                                "example": "NY"
                                            },
                                            "postal_code": {
                                                "type": "string",
                                                "example": "10001"
                                            },
                                            "country": {
                                                "type": "string",
                                                "example": "USA"
                                            },
                                            "latitude": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 40.7128
                                            },
                                            "longitude": {
                                                "type": "number",
                                                "format": "float",
                                                "example": -74.006
                                            },
                                            "is_primary": {
                                                "type": "boolean",
                                                "example": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Warehouse created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Warehouse created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/WarehouseResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/company/warehouses/{id}": {
            "get": {
                "tags": [
                    "Warehouses"
                ],
                "summary": "Get a single warehouse",
                "description": "Fetches a single warehouse by its ID for the authenticated company.",
                "operationId": "ab3d514ad19e465ee6b9cbd5851d0f37",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the warehouse",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Warehouse fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Warehouse fetched successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/WarehouseResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Warehouse not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Warehouse not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/company/warehouses/{warehouse}": {
            "put": {
                "tags": [
                    "Warehouses"
                ],
                "summary": "Update a warehouse",
                "description": "Updates an existing warehouse for the authenticated company. Only provided fields will be updated.",
                "operationId": "29de98a61b7083d5315ef03f109959a7",
                "parameters": [
                    {
                        "name": "warehouse",
                        "in": "path",
                        "description": "ID of the warehouse to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Main Warehouse"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "WH001"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Dumpster"
                                    },
                                    "capacity": {
                                        "type": "integer",
                                        "example": 50
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "address": {
                                        "properties": {
                                            "address_line1": {
                                                "type": "string",
                                                "example": "123 Street"
                                            },
                                            "address_line2": {
                                                "type": "string",
                                                "example": "Apt 4B"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "New York"
                                            },
                                            "state": {
                                                "type": "string",
                                                "example": "NY"
                                            },
                                            "postal_code": {
                                                "type": "string",
                                                "example": "10001"
                                            },
                                            "country": {
                                                "type": "string",
                                                "example": "USA"
                                            },
                                            "latitude": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 40.7128
                                            },
                                            "longitude": {
                                                "type": "number",
                                                "format": "float",
                                                "example": -74.006
                                            },
                                            "is_primary": {
                                                "type": "boolean",
                                                "example": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Warehouse updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Warehouse updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/WarehouseResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Warehouse not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Warehouse not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The code field is required."
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Warehouses"
                ],
                "summary": "Delete a warehouse",
                "description": "Deletes a warehouse for the authenticated company.",
                "operationId": "15fcaf06e41af7069b4e1801dfb8be72",
                "parameters": [
                    {
                        "name": "warehouse",
                        "in": "path",
                        "description": "ID of the warehouse to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Warehouse deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Warehouse deleted successfully"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Warehouse not deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Warehouse not deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/media/upload": {
            "post": {
                "tags": [
                    "Media"
                ],
                "summary": "Upload media files to S3 and optionally delete old ones",
                "operationId": "db57490fe0f8cd0f85b387cd8eab8166",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "media[]"
                                ],
                                "properties": {
                                    "media[]": {
                                        "description": "One or more media files (max 2MB each)",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "remove_paths[]": {
                                        "description": "Optional array of S3 paths to delete",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": ""
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Media processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Media processed successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "uploaded": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "path": {
                                                                "type": "string",
                                                                "example": "media/abc123.jpg"
                                                            },
                                                            "url": {
                                                                "type": "string",
                                                                "example": "https://bucket.s3.amazonaws.com/media/abc123.jpg"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "example.jpg"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "jpg"
                                                            },
                                                            "mime_type": {
                                                                "type": "string",
                                                                "example": "image/jpeg"
                                                            },
                                                            "size": {
                                                                "type": "integer",
                                                                "example": 204800
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "deleted": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "media/old-file.jpg"
                                                    }
                                                },
                                                "failed_deletes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "media/fail.jpg"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - No media file provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No media file provided."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error - Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The media field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to process media",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to process media. Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AddressResource": {
                "title": "Address",
                "description": "Address resource response",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "address_line1": {
                        "type": "string",
                        "example": "Address Line 1"
                    },
                    "address_line2": {
                        "type": "string",
                        "example": "Address Line 2"
                    },
                    "city": {
                        "type": "string",
                        "example": "City"
                    },
                    "state": {
                        "type": "string",
                        "example": "State"
                    },
                    "country": {
                        "type": "string",
                        "example": "Country"
                    },
                    "zip": {
                        "type": "string",
                        "example": "Zip"
                    },
                    "latitude": {
                        "type": "number",
                        "example": 10
                    },
                    "longitude": {
                        "type": "number",
                        "example": 10
                    },
                    "is_primary": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "CompanyResource": {
                "title": "Company Details",
                "description": "Company details with related resources",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "ABC Waste Management"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "info@abcwaste.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+923001234567"
                    },
                    "slug": {
                        "type": "string",
                        "example": "abc-waste"
                    },
                    "customer_panel_url": {
                        "type": "string",
                        "example": "https://customer.abcwaste.com",
                        "nullable": true
                    },
                    "logo": {
                        "type": "string",
                        "example": "https://cdn.example.com/logo.png",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "example": "Waste management company in Karachi",
                        "nullable": true
                    },
                    "website": {
                        "type": "string",
                        "example": "https://abcwaste.com",
                        "nullable": true
                    },
                    "onboarding_status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "onboarding_notes": {
                        "type": "string",
                        "example": "Awaiting verification",
                        "nullable": true
                    },
                    "onboarding_completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "general_settings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GeneralSettingResource"
                        }
                    },
                    "timings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TimingResource"
                        }
                    },
                    "holidays": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HolidayResource"
                        }
                    },
                    "payment_options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentOptionResource"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentResource"
                        }
                    },
                    "latest_location": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/LatestLocationResource"
                            }
                        ],
                        "nullable": true
                    },
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddressResource"
                        }
                    },
                    "warehouses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarehouseResource"
                        }
                    },
                    "company_default_address": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DefaultAddressResource"
                            }
                        ],
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Company": {
                "title": "Company",
                "description": "Company resource response",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Acme Inc."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "company@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Business St, NY"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-22T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-22T10:00:00Z"
                    }
                },
                "type": "object"
            },
            "DefaultAddressResource": {
                "title": "Default Address",
                "description": "Default address resource response",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "label": {
                        "type": "string",
                        "example": "label"
                    },
                    "address_line1": {
                        "type": "string",
                        "example": "Address Line 1"
                    },
                    "address_line2": {
                        "type": "string",
                        "example": "Address Line 2"
                    },
                    "city": {
                        "type": "string",
                        "example": "City"
                    },
                    "state": {
                        "type": "string",
                        "example": "State"
                    },
                    "country": {
                        "type": "string",
                        "example": "Country"
                    },
                    "zip": {
                        "type": "string",
                        "example": "Zip"
                    },
                    "latitude": {
                        "type": "number",
                        "example": 10
                    },
                    "longitude": {
                        "type": "number",
                        "example": 10
                    },
                    "is_primary": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "DocumentResource": {
                "title": "Document",
                "description": "Document resource response",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Document"
                    },
                    "type": {
                        "type": "string",
                        "example": "type"
                    },
                    "file_path": {
                        "type": "string",
                        "example": "file_path"
                    },
                    "mime_type": {
                        "type": "string",
                        "example": "mime_type"
                    },
                    "issued_at": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-01"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-01"
                    },
                    "is_verified": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "GeneralSettingResource": {
                "title": "General Setting",
                "description": "General setting resource response",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "key": {
                        "type": "string",
                        "example": "key"
                    },
                    "value": {
                        "type": "string",
                        "example": "value"
                    },
                    "type": {
                        "type": "string",
                        "example": "type"
                    },
                    "description": {
                        "type": "string",
                        "example": "Description"
                    }
                },
                "type": "object"
            },
            "HolidayResource": {
                "title": "Holiday",
                "description": "Holiday resource response",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Holiday"
                    },
                    "holiday_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-01-01"
                    },
                    "description": {
                        "type": "string",
                        "example": "Holiday description"
                    },
                    "is_recurring": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "LatestLocationResource": {
                "title": "Latest Location",
                "description": "Latest location resource response",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "latitude": {
                        "type": "number",
                        "example": 10
                    },
                    "longitude": {
                        "type": "number",
                        "example": 10
                    },
                    "address": {
                        "type": "string",
                        "example": "Address"
                    },
                    "recorded_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "PaymentOptionResource": {
                "title": "Payment Option",
                "description": "Payment option resource response",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Payment Option"
                    },
                    "type": {
                        "type": "string",
                        "example": "type"
                    },
                    "percentage": {
                        "type": "number",
                        "example": 100
                    },
                    "description": {
                        "type": "string",
                        "example": "Description"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "TaxResource": {
                "title": "Tax",
                "description": "Tax resource response",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Tax"
                    },
                    "type": {
                        "type": "string",
                        "example": "type"
                    },
                    "rate": {
                        "type": "number",
                        "example": 10
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "TimingResource": {
                "title": "Timing",
                "description": "Timing resource response",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "day_of_week": {
                        "type": "string",
                        "example": "monday"
                    },
                    "opens_at": {
                        "type": "string",
                        "example": "09:00"
                    },
                    "closes_at": {
                        "type": "string",
                        "example": "17:00"
                    },
                    "is_closed": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "WarehouseResource": {
                "title": "Warehouse",
                "description": "Warehouse resource response",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Warehouse"
                    },
                    "code": {
                        "type": "string",
                        "example": "code"
                    },
                    "type": {
                        "type": "string",
                        "example": "type"
                    },
                    "capacity": {
                        "type": "integer",
                        "example": 100
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "address": {
                        "type": "object",
                        "example": {
                            "address_line1": "123 Main St",
                            "city": "New York",
                            "country": "USA"
                        }
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Company Authentication",
            "description": "Company Authentication"
        },
        {
            "name": "Company Details",
            "description": "Company Details"
        },
        {
            "name": "General Settings",
            "description": "General Settings"
        },
        {
            "name": "Payment Options",
            "description": "Payment Options"
        },
        {
            "name": "Taxes",
            "description": "Taxes"
        },
        {
            "name": "Timings",
            "description": "Timings"
        },
        {
            "name": "Warehouses",
            "description": "Warehouses"
        },
        {
            "name": "Media",
            "description": "Media"
        }
    ]
}